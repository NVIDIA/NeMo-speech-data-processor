processors_to_run: "0:"
lang: en
base_dir: /path/to/dataset/folder
workspace_dir: ${base_dir}/${lang}

processors:
  - _target_: sdp.processors.datasets.commoncrawl.PreserveByValue
    input_manifest_file: /path/to/dataset/folder/manifest11.json
    output_manifest_file: ${workspace_dir}/manifest0.json
    input_field: audio_lang
    target_value: ${lang}

  - _target_: sdp.processors.datasets.commoncrawl.PreserveByValue
    output_manifest_file: ${workspace_dir}/manifest1.json
    input_field: text_lang
    target_value: ${lang}

  - _target_: sdp.processors.ASRInference
    output_manifest_file: ${workspace_dir}/manifest2.json
    pretrained_model: nvidia/stt_${lang}_fastconformer_hybrid_large_pc
    batch_size: 64

  - _target_: sdp.processors.DropIfRegexMatch
    output_manifest_file: ${workspace_dir}/manifest3.json
    regex_patterns:
      # - '://'
      # - "(\\s)+(www)\\.[a-zA-Z0-9/]+(\\s|$)+"
      # - '\\x'
      - "www\\.wiki\\s"
      - "www\\.usgs\\.\\s"
      # - 'é'
      # - 'ô'
      # - '×'
      # - 'š'
      # - 'ö'
      # - 'ß'
      # - 'ä'
      # - 'ü'
      # - '\u202a'
      # - 'č'
      # - 'ć'
      # - 'á'
      # - 'ã'
      # - 'â'
      # - 'ï'
      # - '\u2060'
      # - 'ñ'
      # - 'ŵ'
      # - 'à'
      # - 'ù'
      # - 'ò'
      # - 'ó'
      # - 'ő'
      # - 'ê'
      # - 'ă'
      # - 'ú'
      # - 'µ'
      # - '¿'
      # - '¡'
      # - 'ë'
      # - "è"
      # - "é"
      # - "È"
      # - "É"
      
  - _target_: sdp.processors.DuplicateFields
    output_manifest_file: ${workspace_dir}/manifest4.json
    duplicate_fields: {"text":"orig_text"}

  - _target_: sdp.processors.SubRegex
    output_manifest_file: ${workspace_dir}/manifest5.json
    regex_params_list:
      - {"pattern": '\[(.*?)\]', "repl": ' '}
      - {"pattern": '\((.*?)\)', "repl": ' '}
      - {"pattern": "^[\\s]*\\*(.*?)\\*[\\s]*$", "repl": "\\1"}
      - {"pattern": 'î', "repl": "i"}
      - {"pattern": 'ì', "repl": "i"}
      - {"pattern": 'í', "repl": "i"}
      - {"pattern": '‚', "repl": ","}
      - {"pattern": "’", "repl": "'"}
      - {"pattern": "[-–—]", "repl": " "}
      - {"pattern": '―', "repl": "-"}
      - {"pattern": '—', "repl": "-"}
      - {"pattern": '⁺', "repl": "+"}
      - {"pattern": '“', "repl": '"'}
      - {"pattern": '”', "repl": '"'}
      - {"pattern": '…', "repl": '.'}
      - {"pattern": '‘', "repl": "'"}
      - {"pattern": '′', "repl": "'"}
      - {"pattern": '`', "repl": "'"}
      - {"pattern": '⁻', "repl": "-"}
      - {"pattern": '‑', "repl": "-"}
      - {"pattern": '¶', "repl": ' '}
      - {"pattern": '«', "repl": '"'}
      - {"pattern": '»', "repl": '"'}
      - {"pattern": '„', "repl": '"'}
      - {"pattern": '®', "repl": ' '}
      # - {"pattern": "%", "repl": ' '}
      - {"pattern": '@', "repl": " "}
      - {"pattern": "\\s+", "repl": " "}

  - _target_: sdp.processors.DropHighLowWordrate
    output_manifest_file: ${workspace_dir}/manifest6.json
    high_wordrate_threshold: 100
    low_wordrate_threshold: 0.01

  - _target_: sdp.processors.DropIfRegexMatch
    output_manifest_file: ${workspace_dir}/manifest7.json
    regex_patterns:
      - "^\\s*$"
  
  - _target_: sdp.processors.datasets.commoncrawl.Subprocess
    output_manifest_file: ${workspace_dir}/manifest8.json
    input_manifest_arg: "--manifest"
    output_manifest_arg: "--output_filename"
    arg_separator: "="
    cmd: "python /home/nkarpov/workspace/NeMo-text-processing/nemo_text_processing/text_normalization/normalize_with_audio.py \
        --language=en --n_jobs=-1 --batch_size=600 --manifest_text_field=text --cache_dir=${workspace_dir}/cache --overwrite_cache \
        --whitelist=/home/nkarpov/workspace/NeMo-text-processing/nemo_text_processing/text_normalization/${lang}/data/whitelist/asr_with_pc.tsv"

  - _target_: sdp.processors.RenameFields
    output_manifest_file: ${workspace_dir}/manifest9.json
    rename_fields: {"normalized":"text"}

  - _target_: sdp.processors.SubRegex
    output_manifest_file: ${workspace_dir}/manifest10.json
    text_key: text
    regex_params_list:
      - {"pattern": "^\\s*'+\\s(.*?)\\s*'+\\s*$", "repl": "\\1"}
      - {"pattern": "^\\s*'*\\s*", "repl": ""}
      - {"pattern": "'{2,}", "repl": "'"}
      - {"pattern": '\s(\\x[a-h][0-9]){1,}\s', "repl": ' '}
      - {"pattern": '(\\x[a-h][0-9]){1,}', "repl": ''}
      - {"pattern": '\.{3}', "repl": '.'}
      - {"pattern": '!', "repl": '.'}
      - {"pattern": '\$', "repl": ""}
      - {"pattern": "[^A-Za-z'.,?]", "repl": " "}
      - {"pattern": "\\s+", "repl": " "}
    test_cases:
      - {input: {text: "' jupiter and venus both shining in the golden rosy sky"}, output: {text: "jupiter and venus both shining in the golden rosy sky"}}
      - {input: {text: "' may all the gold i have ever dreamed of be yours '"}, output: {text: "may all the gold i have ever dreamed of be yours"}}
      - {input: {text: "''cause it''s an adult novel versus ya"}, output: {text: "cause it's an adult novel versus ya"}}

  - _target_: sdp.processors.DropHighLowWordrate
    output_manifest_file: ${workspace_dir}/manifest11.json
    high_wordrate_threshold: 100
    low_wordrate_threshold: 0.01

  - _target_: sdp.processors.DuplicateFields
    output_manifest_file: ${workspace_dir}/manifest12.json
    duplicate_fields: {"text":"text_pc"}

  - _target_: sdp.processors.SubMakeLowercase
    output_manifest_file: ${workspace_dir}/manifest13.json
    text_key: text

  - _target_: sdp.processors.SubRegex
    output_manifest_file: ${workspace_dir}/manifest14.json
    text_key: text
    regex_params_list:
      - {"pattern": "[\\?\\.]", "repl": " "}
      - {"pattern": ",", "repl": " "}
      - {"pattern": "\\s+", "repl": " "}

  - _target_: sdp.processors.DuplicateFields
    output_manifest_file: ${workspace_dir}/manifest15.json
    duplicate_fields: {"pred_text":"pred_text_pc"}

  - _target_: sdp.processors.SubMakeLowercase
    output_manifest_file: ${workspace_dir}/manifest16.json
    text_key: pred_text

  - _target_: sdp.processors.SubRegex
    output_manifest_file: ${workspace_dir}/manifest17.json
    text_key: pred_text
    regex_params_list:
      - {"pattern": "[\\?\\.]", "repl": " "}
      - {"pattern": ",", "repl": " "}
      - {"pattern": "\\s+", "repl": " "}
    
  - _target_: sdp.processors.DropIfRegexMatch
    output_manifest_file: ${workspace_dir}/manifest18.json
    regex_patterns:
      - "^\\s*$"

  - _target_: sdp.processors.DropHighWER
    output_manifest_file: ${workspace_dir}/manifest19.json
    text_key: text
    pred_text_key: pred_text
    wer_threshold: 75

  - _target_: sdp.processors.DropHighCER
    output_manifest_file: ${workspace_dir}/manifest20.json
    text_key: text
    pred_text_key: pred_text
    cer_threshold: 30
    
  - _target_: sdp.processors.RenameFields
    input_manifest_file: ${workspace_dir}/manifest18.json
    output_manifest_file: ${workspace_dir}/manifest21.json
    rename_fields: {"audios":"source_audio"}

  - _target_: sdp.processors.datasets.commoncrawl.AlignerSubprocess
    output_manifest_file: ${workspace_dir}/manifest22.json
    input_manifest_arg: "manifest_filepath"
    output_field: "alignment"
    cmd: "python3 /home/nkarpov/workspace/NeMo/tools/nemo_forced_aligner/align.py    pretrained_name=stt_en_fastconformer_hybrid_large_pc \
      output_dir=${workspace_dir} batch_size=1 additional_segment_grouping_separator=|"

  - _target_: sdp.processors.datasets.commoncrawl.SplitByAligner
    output_manifest_file: ${workspace_dir}/manifest23.json
    splited_audio_dir: ${workspace_dir}/nfa
    input_field: source_audio
    output_field: nfa_filepath

  - _target_: sdp.processors.DuplicateFields
    output_manifest_file: ${workspace_dir}/manifest24.json
    duplicate_fields: {"audio_filepath":"audio_filepath_base"}

  - _target_: sdp.processors.RenameFields
    output_manifest_file: ${workspace_dir}/manifest25.json
    rename_fields: {"nfa_filepath":"audio_filepath"}

  - _target_: sdp.processors.DropHighLowDuration
    output_manifest_file: ${workspace_dir}/manifest26.json
    high_duration_threshold: 60
    low_duration_threshold: 0.01
    duration_key: nfa_duration

  - _target_: sdp.processors.ASRInference
    output_manifest_file: ${workspace_dir}/manifest27.json
    pretrained_model: nvidia/stt_${lang}_fastconformer_hybrid_large_pc
    batch_size: 64

  - _target_: sdp.processors.DuplicateFields  
    output_manifest_file: ${workspace_dir}/manifest28.json
    duplicate_fields: {"pred_text":"pred_text_pc"}

  - _target_: sdp.processors.SubMakeLowercase
    output_manifest_file: ${workspace_dir}/manifest29.json
    text_key: pred_text

  - _target_: sdp.processors.SubRegex
    output_manifest_file: ${workspace_dir}/manifest30.json
    text_key: pred_text
    regex_params_list:
      - {"pattern": "[\\?\\.]", "repl": " "}
      - {"pattern": ",", "repl": " "}
      - {"pattern": "\\s+", "repl": " "}
    
  - _target_: sdp.processors.DropHighWER
    output_manifest_file: ${workspace_dir}/manifest31.json
    text_key: text
    pred_text_key: pred_text
    wer_threshold: 75

  - _target_: sdp.processors.DropHighCER
    output_manifest_file: ${workspace_dir}/manifest32.json
    text_key: text
    pred_text_key: pred_text
    cer_threshold: 30


  - _target_: sdp.processors.datasets.commoncrawl.JoinBy
    input_manifest_file: ${workspace_dir}/manifest21.json
    output_manifest_file: ${workspace_dir}/manifest33.json
    input_field: source_audio


  - _target_: sdp.processors.datasets.commoncrawl.Subprocess
    output_manifest_file: ${workspace_dir}/manifest34.json
    input_manifest_arg: "--data_manifest"
    output_manifest_arg: "--out_manifest"
    arg_separator: "="
    cmd: "python /home/nkarpov/workspace/NvLLMOps/nvllmops/stages/asr/data_segmentation/ds_align/ds_align.py \
    --splits_dir=/mnt/ssd8/cc_sdp/en/dsa \
    --stt-model-path=/home/nkarpov/ckpts/en/stt_en_conformer_ctc_large_1.1/stt_en_conformer_ctc_large.nemo \
    --stt-model-type=CTC \
    --min-audio-duration=2 \
    --max-audio-duration=40 \
    --asr-batch-size=32"

  - _target_: sdp.processors.DropIfRegexMatch
    output_manifest_file: ${workspace_dir}/manifest35.json
    text_key: text
    regex_patterns:
      - "^\\s*$"

  - _target_: sdp.processors.DropHighWER
    output_manifest_file: ${workspace_dir}/manifest36.json
    text_key: text
    pred_text_key: text_asr_pred
    wer_threshold: 75

  - _target_: sdp.processors.DropHighCER
    output_manifest_file: ${workspace_dir}/manifest37.json
    text_key: text
    pred_text_key: text_asr_pred
    cer_threshold: 30
    
  - _target_: sdp.processors.KeepOnlySpecifiedFields
    input_manifest_file: ${workspace_dir}/manifest20.json
    fields_to_keep: ["audio_filepath", "duration", "text_pc"]

  - _target_: sdp.processors.RenameFields
    rename_fields: {"text_pc":"text"}

  - _target_: sdp.processors.SubRegex
    text_key: text
    regex_params_list:
      - {"pattern": "\\s+\\?", "repl": "?"}
      - {"pattern": "\\s+\\.", "repl": "."}
      - {"pattern": "\\s+,", "repl": ","}
      - {"pattern": "\\s+", "repl": " "}

  - _target_: sdp.processors.AddConstantFields
    output_manifest_file: ${workspace_dir}/manifest_${lang}.json
    fields: {"lang": '${lang}'}
 
  - _target_: sdp.processors.datasets.commoncrawl.TrainDevTestSplitCC
    output_manifest_file: ${workspace_dir}/manifest_${lang}_train.json
    lang: ${lang}
    data_split: train

  - _target_: sdp.processors.datasets.commoncrawl.CopyFiles
    file_field: audio_filepath
    path_to_copy: ${base_dir}/splited_manifests/${lang}_train/
    path_levels: 2
    
  - _target_: sdp.processors.datasets.commoncrawl.DropAbsPath
    output_manifest_file: ${base_dir}/splited_manifests/${lang}_train.json 
    path_key: audio_filepath
    abs_path_to_drop: ${base_dir}/splited_manifests/

  - _target_: sdp.processors.datasets.commoncrawl.TrainDevTestSplitCC
    input_manifest_file: ${workspace_dir}/manifest_${lang}.json
    output_manifest_file: ${workspace_dir}/manifest_${lang}_dev.json
    lang: ${lang}
    data_split: dev

  - _target_: sdp.processors.datasets.commoncrawl.CopyFiles
    file_field: audio_filepath
    path_to_copy: ${base_dir}/splited_manifests/${lang}_dev/
    path_levels: 2
  
  - _target_: sdp.processors.datasets.commoncrawl.DropAbsPath
    output_manifest_file: ${base_dir}/splited_manifests/${lang}_dev.json 
    path_key: audio_filepath
    abs_path_to_drop: ${base_dir}/splited_manifests/

  - _target_: sdp.processors.datasets.commoncrawl.TrainDevTestSplitCC
    input_manifest_file: ${workspace_dir}/manifest_${lang}.json
    output_manifest_file: ${workspace_dir}/manifest_${lang}_test.json
    lang: ${lang}
    data_split: test

  - _target_: sdp.processors.datasets.commoncrawl.CopyFiles
    file_field: audio_filepath
    path_to_copy: ${base_dir}/splited_manifests/${lang}_test/
    path_levels: 2
  
  - _target_: sdp.processors.datasets.commoncrawl.DropAbsPath
    output_manifest_file: ${base_dir}/splited_manifests/${lang}_test.json 
    path_key: audio_filepath
    abs_path_to_drop: ${base_dir}/splited_manifests/